<%@ val metadata: org.shachi.model.Metadata %>
<%@ val values: List[org.shachi.model.ResourceDetails.ResourceMetadataValue] %>
<%@ val valuesByType: Map[String, List[org.shachi.model.MetadataValue]] %>
<% import org.shachi.model.MetadataInputType %>
<% import org.shachi.model.ResourceDetails._ %>


#if ( values.isEmpty )
  #match (metadata.inputType)
    #case(MetadataInputType.Text)
      <input type="text" value="">
    #case(MetadataInputType.TextArea)
      <textarea></textarea>
    #case(MetadataInputType.Select)
    #case(MetadataInputType.SelectOnly)
    #case(MetadataInputType.Relation)
    #case(MetadataInputType.Language)
    #case(MetadataInputType.Date)
    #case(MetadataInputType.Range)
  #end
#end

#for ( mv <- values )
  #match (mv)
    #case(value: ResourceMetadataValueText)
      <input type="text" value="${value.content}">
    #case(value: ResourceMetadataValueTextArea)
      <textarea>${value.content}</textarea>
    #case(value: ResourceMetadataValueSelect)
    #case(value: ResourceMetadataValueSelectOnly)
    #case(value: ResourceMetadataValueRelation)
    #case(value: ResourceMetadataValueLanguage)
    #case(value: ResourceMetadataValueDate)
    #case(value: ResourceMetadataValueRange)
  #end
#end

